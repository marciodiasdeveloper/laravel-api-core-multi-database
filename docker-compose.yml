# docker-compose --env-file docker/.env up -d --build
version: "3.3"
services:
  md_microservice_core_laravel:
    container_name: md_microservice_core_laravel
    env_file:
      - ./docker/.env
    build:
      # args:
      #   user: apicore
      #   uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: laravel-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    depends_on:
      - md_microservice_core_queue
      - md_microservice_core_redis
      - md_microservice_core_mysql
    links:
      - md_microservice_core_mysql
    networks:
      - md_microservice_core

  md_microservice_core_nginx:
    container_name: md_microservice_core_nginx
    image: nginx:alpine
    env_file: .env
    restart: unless-stopped
    ports:
      - ${API_CORE_PORT}:80
      # - 443:443
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - md_microservice_core

  md_microservice_core_mysql:
    container_name: md_microservice_core_mysql
    env_file:
      - ./docker/.env
    image: "mysql:5.7.31"
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASS}"
    command: mysqld --sql_mode=""
    volumes:
      - ${MYSQL_DIR}:/var/lib/mysql
    ports:
      - 9306:3306
    expose:
      - "${MYSQL_PORT}"
    networks:
      - md_microservice_core

  md_microservice_core_phpmyadmin:
    container_name: md_microservice_core_phpmyadmin
    env_file:
      - ./docker/.env
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      - PMA_ARBITRARY=1
    links:
      - md_microservice_core_mysql
    networks:
      - md_microservice_core

  md_microservice_core_redis:
    container_name: md_microservice_core_redis
    image: "redis:latest"
    env_file:
      - ./docker/.env
    restart: always
    volumes:
      - ${REDIS_DIR}:/data
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    expose:
      - "${REDIS_PORT}"
    networks:
      - md_microservice_core

  md_microservice_core_queue:
    container_name: md_microservice_core_queue
    build:
      # args:
      #   user: marciodias
      #   uid: 1000
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    command: "php artisan queue:work"
    volumes:
      - ./:/var/www
    depends_on:
      - md_microservice_core_redis
    networks:
      - md_microservice_core

networks:
  md_microservice_core:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}

volumes:
  persistent:
